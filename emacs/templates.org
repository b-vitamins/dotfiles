#+TITLE: Tempel template scaffolding
#+PROPERTY: header-args:emacs-lisp :exports none

* Inline math formulas and displayed equations
:PROPERTIES:
:header-args:emacs-lisp: :tangle templates/inline-math-formulas-and-displayed-equations.eld
:END:
** The fundamentals
#+BEGIN_SRC emacs-lisp
org-mode

;; Basic inline and display math
(m "$" p "$")                                          ; inline math $...$
(M "\\(" p "\\)")                                      ; inline math \(...\)
(d "\\[" n> r> n> "\\]")                               ; display math \[...\]
(eq "\\begin{equation}" n> r> n> "\\end{equation}")     ; numbered equation
(eq* "\\begin{equation*}" n> r> n> "\\end{equation*}")  ; unnumbered equation

;; Multiline environments - primary (can be numbered)
(sp "\\begin{split}" n> r> n> "\\end{split}")          ; split (use inside equation)
(ml "\\begin{multline}" n> r> n> "\\end{multline}")     ; multline
(ml* "\\begin{multline*}" n> r> n> "\\end{multline*}")  ; multline*
(ga "\\begin{gather}" n> r> n> "\\end{gather}")        ; gather
(ga* "\\begin{gather*}" n> r> n> "\\end{gather*}")     ; gather*
(al "\\begin{align}" n> r> n> "\\end{align}")          ; align
(al* "\\begin{align*}" n> r> n> "\\end{align*}")       ; align*
(ala "\\begin{alignat}{" p "}" n> r> n> "\\end{alignat}")    ; alignat (requires number)
(ala* "\\begin{alignat*}{" p "}" n> r> n> "\\end{alignat*}") ; alignat*
(fl "\\begin{flalign}" n> r> n> "\\end{flalign}")      ; flalign (full length)
(fl* "\\begin{flalign*}" n> r> n> "\\end{flalign*}")   ; flalign*

;; Subordinate environments (for use within other math)
(gad "\\begin{gathered}" (p "[t/c/b]? " pos) n> r> n> "\\end{gathered}")    ; gathered
(ald "\\begin{aligned}" (p "[t/c/b]? " pos) n> r> n> "\\end{aligned}") ; aligned
(alad "\\begin{alignedat}{" p "}" (p "[t/c/b]? " pos) n> r> n> "\\end{alignedat}") ; alignedat

;; Array environment (general purpose)
(ar "\\begin{array}{" p "}" n> r> n> "\\end{array}")    ; array with column spec

;; Subequations
(se "\\begin{subequations}" (p "\\label{" label "}") n> r> n> "\\end{subequations}") ; subequations
#+END_SRC

** Automatic numbering and cross-referencing
#+BEGIN_SRC emacs-lisp
org-mode

;; Labels and references
(l "\\label{" p "}")                    ; label
(r "\\eqref{" p "}")                    ; equation reference (with parentheses)
(rf "\\ref{" p "}")                      ; general reference (no parentheses)
(tg "\\tag{" p "}")                      ; manual tag
(tg* "\\tag*{" p "}")                    ; tag without parentheses

;; Common label patterns
(leq "\\label{eq:" p "}")                ; equation label
(lfig "\\label{fig:" p "}") ; figure label
(ltab "\\label{tab:" p "}")              ; table label
(lsec "\\label{sec:" p "}")              ; section label
(lthm "\\label{thm:" p "}")              ; theorem label
(llem "\\label{lem:" p "}")              ; lemma label
(lprop "\\label{prop:" p "}")            ; proposition label
(lcor "\\label{cor:" p "}")              ; corollary label
(ldef "\\label{def:" p "}")              ; definition label

;; Cross-referencing with prefixes
(req "\\eqref{eq:" p "}")                ; equation reference
(rfig "\\ref{fig:" p "}")                ; figure reference
(rtab "\\ref{tab:" p "}")                ; table reference
(rsec "\\ref{sec:" p "}")                ; section reference

;; Numbering control
(nw "\\numberwithin{equation}{" p "}")    ; number equations within sections
(nn "\\nonumber")                         ; suppress equation number on current line
(nt "\\notag")                            ; same as \nonumber
#+END_SRC

* Math symbols and math fonts
:PROPERTIES:
:header-args:emacs-lisp: :tangle templates/math-symbols-and-math-fonts.eld
:END:
** Classes of math symbols
#+BEGIN_SRC emacs-lisp
latex-mode org-mode

(tblc
 "\\begin{tabular}{|l|l|l|l|}" n
 "\\hline Class number & Mnemonic & Description (part of speech) & Examples \\\\" n
 "\\hline 0 & Ord & simple/ordinary (\"noun\") & $A 0 \\Phi \\infty$ \\\\" n
 "\\hline 1 & Op & prefix operator & $\\sum \\Pi$ \\\\" n
 "\\hline 2 & Bin & binary operator (conjunction) & $+ \\cup \\wedge$ \\\\" n
 "\\hline 3 & Rel & relation/comparison (verb) & $= < C$ \\\\" n
 "\\hline 4 & Open & left/opening delimiter & ( [ \\{ \\lbrace \\rbrace \\} >) \\\\" n
 "\\hline 5 & Close & right/closing delimiter & ) ] \\} > \\\\" n
 "\\hline 6 & Punct & postfix/punctuation & ., , ! \\\\" n
 "\\hline" n
 "\\end{tabular}")

(dfs
 "\\DeclareFontShape{OT2}{wncyr}{m}{n}{<->wncyr10}{}")
(dsf
 "\\DeclareSymbolFont{cyr}{OT2}{wncyr}{m}{n}")
(dms
 "\\DeclareMathSymbol{\\Sh}{\\mathalpha}{cyr}{88}")
#+END_SRC

** Some symbols intentionally omitted here
#+BEGIN_SRC emacs-lisp
;;; Some symbols intentionally omitted here (placeholder)
#+END_SRC

** Alphabets and digits
#+BEGIN_SRC emacs-lisp
;;; Alphabets and digits (placeholder)
#+END_SRC

** Miscellaneous simple symbols
#+BEGIN_SRC emacs-lisp
;;; Miscellaneous simple symbols (placeholder)
#+END_SRC

** Binary operator symbols
#+BEGIN_SRC emacs-lisp
;;; Binary operator symbols (placeholder)
#+END_SRC

** Relation symbols: \( <=>\succ\sim \) and variants
#+BEGIN_SRC emacs-lisp
;;; Relation symbols: <=>\succ\sim (placeholder)
#+END_SRC

** Relation symbols: arrows
#+BEGIN_SRC emacs-lisp
;;; Relation symbols: arrows (placeholder)
#+END_SRC

** Relation symbols: miscellaneous
#+BEGIN_SRC emacs-lisp
;;; Relation symbols: miscellaneous (placeholder)
#+END_SRC

** Cumulative (variable-size) operators
#+BEGIN_SRC emacs-lisp
;;; Cumulative (variable-size) operators (placeholder)
#+END_SRC

** Punctuation
#+BEGIN_SRC emacs-lisp
;;; Punctuation (placeholder)
#+END_SRC

** Pairing delimiters (extensible)
#+BEGIN_SRC emacs-lisp
;;; Pairing delimiters (placeholder)
#+END_SRC

** Nonpairing extensible symbols
#+BEGIN_SRC emacs-lisp
;;; Nonpairing extensible symbols (placeholder)
#+END_SRC

** Extensible vertical arrows
#+BEGIN_SRC emacs-lisp
;;; Extensible vertical arrows (placeholder)
#+END_SRC

** Math accents
#+BEGIN_SRC emacs-lisp
;;; Math accents (placeholder)
#+END_SRC

** Named operators
#+BEGIN_SRC emacs-lisp
;;; Named operators (placeholder)
#+END_SRC

* Notations
:PROPERTIES:
:header-args:emacs-lisp: :tangle templates/notations.eld
:END:
** Top and bottom embellishments
#+BEGIN_SRC emacs-lisp
;;; Top and bottom embellishments (placeholder)
#+END_SRC

** Extensible arrows
#+BEGIN_SRC emacs-lisp
;;; Extensible arrows (placeholder)
#+END_SRC

** Affixing symbols to other symbols
#+BEGIN_SRC emacs-lisp
;;; Affixing symbols to other symbols (placeholder)
#+END_SRC

** Matrices
#+BEGIN_SRC emacs-lisp
;;; Matrices (placeholder)
#+END_SRC

** Math spacing commands
#+BEGIN_SRC emacs-lisp
;;; Math spacing commands (placeholder)
#+END_SRC

** Dots
#+BEGIN_SRC emacs-lisp
;;; Dots (placeholder)
#+END_SRC

** Nonbreaking dashes
#+BEGIN_SRC emacs-lisp
;;; Nonbreaking dashes (placeholder)
#+END_SRC

** Roots
#+BEGIN_SRC emacs-lisp
;;; Roots (placeholder)
#+END_SRC

** Boxed formulas
#+BEGIN_SRC emacs-lisp
;;; Boxed formulas (placeholder)
#+END_SRC

* Fractions and related constructions
:PROPERTIES:
:header-args:emacs-lisp: :tangle templates/fractions-and-related-constructions.eld
:END:
** The \( \frac, \dfrac, and \tfrac \) commands
#+BEGIN_SRC emacs-lisp
;;; The \frac, \dfrac, and \tfrac commands (placeholder)
#+END_SRC

** The \( \binom, \dbinom, and \tbinom \) commands
#+BEGIN_SRC emacs-lisp
;;; The \binom, \dbinom, and \tbinom commands (placeholder)
#+END_SRC

** The \( \genfrac \) command
#+BEGIN_SRC emacs-lisp
;;; The \genfrac command (placeholder)
#+END_SRC

** Continued fractions
#+BEGIN_SRC emacs-lisp
;;; Continued fractions (placeholder)
#+END_SRC

* Delimiters
:PROPERTIES:
:header-args:emacs-lisp: :tangle templates/delimiters.eld
:END:
** Delimiter sizes
#+BEGIN_SRC emacs-lisp
;;; Delimiter sizes (placeholder)
#+END_SRC

** Vertical bar notations
#+BEGIN_SRC emacs-lisp
;;; Vertical bar notations (placeholder)
#+END_SRC

* The \text command
:PROPERTIES:
:header-args:emacs-lisp: :tangle templates/the-text-command.eld
:END:
** \( \bmod \) and its relatives
#+BEGIN_SRC emacs-lisp
;;; \bmod and its relatives (placeholder)
#+END_SRC

* Integrals and sums
:PROPERTIES:
:header-args:emacs-lisp: :tangle templates/integrals-and-sums.eld
:END:
** Altering the placement of limits
#+BEGIN_SRC emacs-lisp
;;; Altering the placement of limits (placeholder)
#+END_SRC

** Multiple integral signs
#+BEGIN_SRC emacs-lisp
;;; Multiple integral signs (placeholder)
#+END_SRC

** Multiline subscripts and superscripts
#+BEGIN_SRC emacs-lisp
;;; Multiline subscripts and superscripts (placeholder)
#+END_SRC

** The \( \sideset \) command
#+BEGIN_SRC emacs-lisp
;;; The \sideset command (placeholder)
#+END_SRC

* Changing the size of elements in a formula
:PROPERTIES:
:header-args:emacs-lisp: :tangle templates/changing-the-size-of-elements-in-a-formula.eld
:END:
** Changing the size of elements in a formula
#+BEGIN_SRC emacs-lisp
;;; Changing the size of elements in a formula (placeholder)
#+END_SRC