[env]
TERM = "xterm-256color"

[window]
dimensions = { columns = 100, lines = 30 }
padding = { x = 12, y = 10 }
dynamic_padding = true
decorations = "Full"
opacity = 0.97
blur = true
startup_mode = "Windowed"
title = "Terminal"
dynamic_title = true
decorations_theme_variant = "Dark"
option_as_alt = "Both"  # Important for Emacs bindings on macOS

[scrolling]
history = 100000
multiplier = 3

[font]
size = 13.0
offset = { x = 0, y = 2 }
glyph_offset = { x = 0, y = 1 }
builtin_box_drawing = true

# Try these fonts for better experience (in order of preference)
[font.normal]
family = "SF Mono"  # or "JetBrains Mono", "Fira Code", "Cascadia Code"
style = "Regular"

[font.bold]
family = "SF Mono"
style = "Semibold"

[font.italic]
family = "SF Mono"
style = "Regular Italic"

[font.bold_italic]
family = "SF Mono"
style = "Semibold Italic"

# Colors harmonized with your zsh prompt colors
[colors]
draw_bold_text_with_bright_colors = false
transparent_background_colors = true

[colors.primary]
background = "#0e1419"
foreground = "#d8dee9"
dim_foreground = "#a5abb6"
bright_foreground = "#eceff4"

[colors.cursor]
text = "#0e1419"
cursor = "#81a1c1"  # Matches prompt blue

[colors.vi_mode_cursor]
text = "#0e1419"
cursor = "#ffca28"  # Matches prompt yellow

[colors.search]
matches = { foreground = "#0e1419", background = "#81a1c1" }
focused_match = { foreground = "#0e1419", background = "#ffca28" }

[colors.hints]
start = { foreground = "#0e1419", background = "#66bb6a" }
end = { foreground = "#0e1419", background = "#81a1c1" }

[colors.selection]
text = "CellForeground"
background = "#2e3440"

# Updated to better match your prompt colors
[colors.normal]
black = "#0e1419"
red = "#ef5350"      # Error color
green = "#66bb6a"    # Success/staged
yellow = "#ffca28"   # Warning/dirty (215 in 256)
blue = "#42a5f5"     # Path color (117 in 256)
magenta = "#ab47bc"  # Branch color (150 in 256)
cyan = "#26c6da"     # Info color
white = "#cfd8dc"

[colors.bright]
black = "#546e7a"    # Fade color (245 in 256)
red = "#ff6b68"      # Bright error
green = "#81c784"    # Bright success
yellow = "#ffd54f"   # Bright warning
blue = "#64b5f6"     # Bright path
magenta = "#ba68c8"  # Bright branch
cyan = "#4dd0e1"     # Bright info
white = "#eceff1"

[colors.dim]
black = "#263238"
red = "#d32f2f"
green = "#388e3c"
yellow = "#f57c00"   # Marker color (209 in 256)
blue = "#1976d2"
magenta = "#7b1fa2"
cyan = "#0097a7"
white = "#90a4ae"

[selection]
semantic_escape_chars = ",│`|:\"' ()[]{}<>\\t"
save_to_clipboard = true

[cursor]
style = { shape = "Beam", blinking = "On" }
vi_mode_style = { shape = "Block", blinking = "Off" }  # Disabled in zsh anyway
blink_interval = 600
blink_timeout = 0
unfocused_hollow = true
thickness = 0.15

[terminal]
osc52 = "CopyPaste"

[shell]
program = "/run/current-system/profile/bin/zsh"
args = ["-l"]

[mouse]
hide_when_typing = true
bindings = [
    { mouse = "Right", action = "Paste" },
    { mouse = "Middle", action = "Paste" },
]

[hints]
alphabet = "asdfghjklqwertyuiopzxcvbnm"

[[hints.enabled]]
command = "open"  # or "xdg-open" on Linux, "firefox" if you prefer
hyperlinks = true
post_processing = true
persist = false
mouse.enabled = true
binding = { key = "U", mods = "Control|Shift" }
regex = "(ipfs:|ipns:|magnet:|mailto:|gemini://|gopher://|https://|http://|news:|file:|git://|ssh:|ftp://)[^\u0000-\u001F\u007F-\u009F<>\"\\s{-}\\^⟨⟩`]+"

[keyboard]
bindings = [
    # Let zsh handle most Emacs bindings - only define what alacritty needs to translate

    # Alt key fixes for macOS (if option_as_alt doesn't work perfectly)
    { key = "F", mods = "Alt", chars = "\u001bf" },     # Alt-f forward word
    { key = "B", mods = "Alt", chars = "\u001bb" },     # Alt-b backward word
    { key = "D", mods = "Alt", chars = "\u001bd" },     # Alt-d delete word
    { key = "Left", mods = "Alt", chars = "\u001bb" },  # Alt-Left
    { key = "Right", mods = "Alt", chars = "\u001bf" }, # Alt-Right
    { key = "Backspace", mods = "Alt", chars = "\u001b\u007f" },

    # Clipboard - native alacritty actions
    { key = "V", mods = "Control|Shift", action = "Paste" },
    { key = "C", mods = "Control|Shift", action = "Copy" },
    { key = "Insert", mods = "Shift", action = "Paste" },
    { key = "Insert", mods = "Control", action = "Copy" },

    # Font Size
    { key = "Plus", mods = "Control", action = "IncreaseFontSize" },
    { key = "Equals", mods = "Control", action = "IncreaseFontSize" },
    { key = "Minus", mods = "Control", action = "DecreaseFontSize" },
    { key = "Key0", mods = "Control", action = "ResetFontSize" },

    # Scrolling
    { key = "PageUp", mods = "Shift", action = "ScrollPageUp" },
    { key = "PageDown", mods = "Shift", action = "ScrollPageDown" },
    { key = "Home", mods = "Shift", action = "ScrollToTop" },
    { key = "End", mods = "Shift", action = "ScrollToBottom" },
    { key = "Up", mods = "Control|Shift", action = "ScrollLineUp" },
    { key = "Down", mods = "Control|Shift", action = "ScrollLineDown" },

    # Window Management
    { key = "N", mods = "Control|Shift", action = "SpawnNewInstance" },
    { key = "Return", mods = "Control|Shift", action = "ToggleFullscreen" },
    { key = "M", mods = "Control|Shift", action = "ToggleMaximized" },

    # Search mode
    { key = "F", mods = "Control|Shift", action = "SearchForward" },
    { key = "B", mods = "Control|Shift", action = "SearchBackward" },

    # Clear screen and scrollback
    { key = "L", mods = "Control|Shift", action = "ClearLogNotice" },
    { key = "K", mods = "Control|Shift", action = "ClearHistory" },
]

[debug]
render_timer = false
persistent_logging = false
log_level = "Warn"
print_events = false
prefer_egl = true
